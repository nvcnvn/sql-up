name: Test PostgreSQL Migration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-postgres:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Create test migration
        run: |
          cat > test.sql << EOF
          -- sql-up
          CREATE TABLE users (
            id SERIAL PRIMARY KEY,
            name TEXT NOT NULL
          );
          -- sql-up
          ALTER TABLE users ADD COLUMN email TEXT;
          -- sql-up
          ALTER TABLE users ADD COLUMN active BOOLEAN DEFAULT false;
          EOF

      - name: Test PostgreSQL Migration
        run: |
          go run ./cmd/ \
            --dbms postgres \
            --connection-string "postgres://postgres:postgres@localhost:5432/testdb?sslmode=disable" \
            --sql-file test.sql

      - name: Verify Migration
        run: |
          set -e
          # List all tables
          PGPASSWORD=postgres psql -h localhost -U postgres -d testdb -c "\dt"
          # Show detailed table structure
          PGPASSWORD=postgres psql -h localhost -U postgres -d testdb -c "\d users"
          # Verify table structure
          PGPASSWORD=postgres psql -v ON_ERROR_STOP=1 -h localhost -U postgres -d testdb << 'EOF' || exit 1
          DO $$
          DECLARE
              col_count integer;
          BEGIN
              -- Check for id column with correct type
              SELECT COUNT(*) INTO col_count
              FROM information_schema.columns 
              WHERE table_name = 'users' 
                AND column_name = 'id'
                AND data_type = 'integer'
                AND is_nullable = 'NO';
              IF col_count = 0 THEN
                  RAISE EXCEPTION 'id column not found or incorrect';
              END IF;

              -- Check for name column
              SELECT COUNT(*) INTO col_count
              FROM information_schema.columns 
              WHERE table_name = 'users' 
                AND column_name = 'name'
                AND data_type = 'text'
                AND is_nullable = 'NO';
              IF col_count = 0 THEN
                  RAISE EXCEPTION 'name column not found or incorrect';
              END IF;

              -- Check for email column
              SELECT COUNT(*) INTO col_count
              FROM information_schema.columns 
              WHERE table_name = 'users' 
                AND column_name = 'email'
                AND data_type = 'text';
              IF col_count = 0 THEN
                  RAISE EXCEPTION 'email column not found or incorrect';
              END IF;

              -- Check for active column with default
              SELECT COUNT(*) INTO col_count
              FROM information_schema.columns 
              WHERE table_name = 'users' 
                AND column_name = 'active'
                AND data_type = 'boolean'
                AND column_default = 'false';
              IF col_count = 0 THEN
                  RAISE EXCEPTION 'active column not found or incorrect';
              END IF;
          END;
          $$;
          -- Verify successful completion
          SELECT 'Table verification completed successfully' as result;
          EOF

      - name: Now, drop name, add age
        run: |
          cat > test.sql << EOF
          -- sql-up
          ALTER TABLE users DROP COLUMN name;
          ALTER TABLE users ADD COLUMN age INTEGER;
          EOF

      - name: Test PostgreSQL Migration
        run: |
          go run ./cmd/ \
            --dbms postgres \
            --connection-string "postgres://postgres:postgres@localhost:5432/testdb?sslmode=disable" \
            --sql-file test.sql

      - name: Verify Migration
        run: |
          set -e
          # List all tables
          PGPASSWORD=postgres psql -h localhost -U postgres -d testdb -c "\dt"
          # Show detailed table structure
          PGPASSWORD=postgres psql -h localhost -U postgres -d testdb -c "\d users"
          # Verify table structure
          PGPASSWORD=postgres psql -v ON_ERROR_STOP=1 -h localhost -U postgres -d testdb << 'EOF' || exit 1
          DO $$
          DECLARE
              col_count integer;
          BEGIN
              -- Check for name column absence
              SELECT COUNT(*) INTO col_count
              FROM information_schema.columns 
              WHERE table_name = 'users' 
                AND column_name = 'name';
              IF col_count > 0 THEN
                  RAISE EXCEPTION 'name column found';
              END IF;
              -- Check for age column
              SELECT COUNT(*) INTO col_count
              FROM information_schema.columns 
              WHERE table_name = 'users' 
                AND column_name = 'age'
                AND data_type = 'integer'
                AND is_nullable = 'YES';
              IF col_count = 0 THEN
                  RAISE EXCEPTION 'age column not found or incorrect';
              END IF;
          END;
          $$;
          -- Verify successful completion
          SELECT 'Table verification completed successfully' as result;
          EOF

  build-and-publish:
    needs: test-postgres
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/nvcnvn/sql-up:latest
